package k8stopserviepatches

test_input_allowed_user1 {
    input := { "review": input_review("Service", "UPDATE", allowed_users[0], "status"), "parameters": {"users": allowed_users}}
    results := violation with input as input
    count(results) == 0
}
test_input_allowed_user3 {
    input := { "review": input_review("Service", "UPDATE", allowed_users[2], "status"), "parameters": {"users": allowed_users}}
    results := violation with input as input
    count(results) == 0
}

test_input_denied_user {
    input := { "review": input_review("Service", "UPDATE", "denied_user", "status"), "parameters": {"users": allowed_users}}
    results := violation with input as input
    count(results) == 1
}

test_input_allowed_non_svc {
    input := { "review": input_review("foo", "UPDATE", "denied_user", "status"), "parameters": {"users": allowed_users}}
    results := violation with input as input
    count(results) == 0
}

test_input_allowed_non_svc_update {
    input := { "review": input_review("Service", "foo", "denied_user", "status"), "parameters": {"users": allowed_users}}
    results := violation with input as input
    count(results) == 0
}

test_input_allowed_non_svc_patch {
    input := { "review": input_review("Service", "UPDATE", "denied_user", "foo"), "parameters": {"users": allowed_users}}
    results := violation with input as input
    count(results) == 0
}



input_review(kind, operation, username, subresource) = output {
    output = {
      "kind": {
        "kind": kind
      },
      "subResource": subresource,
      "requestSubResource": subresource,
      "name": "mitm-lb",
      "namespace": "kubeproxy-mitm",
      "operation": operation,
      "userInfo": {
        "username": username
      }
    }
}


allowed_users = ["alloweduser1", "alloweduser2", "alloweduser3"]